name: CI - Build & Push

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ACR_NAME: acrk8stododev

jobs:
  # Lint backend code
  backend-lint:
    name: Backend Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements.txt
          pip install black flake8

      - name: Check syntax errors
        run: |
          cd backend
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Check code style
        run: |
          cd backend
          black --check . || echo "‚ö†Ô∏è Code formatting issues found (run 'black .')"

  # Lint frontend code
  frontend-lint:
    name: Frontend Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Lint
        run: |
          cd frontend
          npm run lint

      - name: Type check
        run: |
          cd frontend
          npx tsc --noEmit

      - name: Build check
        run: |
          cd frontend
          npm run build

  # Build and push Docker images
  build-images:
    name: Build & Push Images
    runs-on: ubuntu-latest
    needs: [backend-lint, frontend-lint]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        run: |
          az acr login --name ${{ env.ACR_NAME }}

      - name: Build and push backend image
        run: |
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/todo-backend:${{ github.sha }} \
            -t ${{ env.ACR_NAME }}.azurecr.io/todo-backend:latest \
            -f infrastructure/docker/backend/Dockerfile .

          docker push ${{ env.ACR_NAME }}.azurecr.io/todo-backend:${{ github.sha }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/todo-backend:latest

      - name: Build and push frontend image
        run: |
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/todo-frontend:${{ github.sha }} \
            -t ${{ env.ACR_NAME }}.azurecr.io/todo-frontend:latest \
            -f infrastructure/docker/frontend/Dockerfile .

          docker push ${{ env.ACR_NAME }}.azurecr.io/todo-frontend:${{ github.sha }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/todo-frontend:latest

      - name: Summary
        run: |
          echo "‚úÖ Images built and pushed successfully"
          echo "üê≥ Backend: ${{ env.ACR_NAME }}.azurecr.io/todo-backend:${{ github.sha }}"
          echo "üê≥ Frontend: ${{ env.ACR_NAME }}.azurecr.io/todo-frontend:${{ github.sha }}"
