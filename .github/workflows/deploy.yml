name: Build and Deploy to AKS

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch: # Manual trigger

env:
  ACR_NAME: acrk8stododev
  AKS_RESOURCE_GROUP: rg-k8s-todo-dev
  AKS_CLUSTER_NAME: aks-k8s-todo-dev
  NAMESPACE: todo-app

jobs:
  build-and-push:
    name: Build and Push Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        run: |
          az acr login --name ${{ env.ACR_NAME }}

      - name: Build and push backend image
        run: |
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/todo-backend:${{ github.sha }} \
            -t ${{ env.ACR_NAME }}.azurecr.io/todo-backend:latest \
            -f infrastructure/docker/backend/Dockerfile .

          docker push ${{ env.ACR_NAME }}.azurecr.io/todo-backend:${{ github.sha }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/todo-backend:latest

      - name: Build and push frontend image
        run: |
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/todo-frontend:${{ github.sha }} \
            -t ${{ env.ACR_NAME }}.azurecr.io/todo-frontend:latest \
            -f infrastructure/docker/frontend/Dockerfile .

          docker push ${{ env.ACR_NAME }}.azurecr.io/todo-frontend:${{ github.sha }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/todo-frontend:latest

  deploy:
    name: Deploy to AKS
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        run: |
          az aks get-credentials \
            --resource-group ${{ env.AKS_RESOURCE_GROUP }} \
            --name ${{ env.AKS_CLUSTER_NAME }} \
            --overwrite-existing

      - name: Restart deployments
        run: |
          kubectl rollout restart deployment/todo-app-backend -n ${{ env.NAMESPACE }}
          kubectl rollout restart deployment/todo-app-frontend -n ${{ env.NAMESPACE }}

      - name: Wait for rollout
        run: |
          kubectl rollout status deployment/todo-app-backend -n ${{ env.NAMESPACE }} --timeout=5m
          kubectl rollout status deployment/todo-app-frontend -n ${{ env.NAMESPACE }} --timeout=5m

      - name: Verify deployment
        run: |
          kubectl get pods -n ${{ env.NAMESPACE }}
