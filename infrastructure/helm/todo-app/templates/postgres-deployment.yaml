apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres
  namespace: {{ .Release.Namespace }}
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgres-secret
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgres-secret
                  key: POSTGRES_PASSWORD
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
              {{- if .Values.postgres.persistence.subPath }}
              subPath: {{ .Values.postgres.persistence.subPath }}
              {{- end }}
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
      volumes:
        - name: postgres-storage
          {{- if .Values.postgres.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-postgres-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}